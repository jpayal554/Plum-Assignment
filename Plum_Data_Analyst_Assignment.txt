{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f9501bce",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import warnings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "15fd46ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(r\"C:\\Users\\Vipul\\OneDrive\\Documents\\My Data Sources\\Plum\\DA Assignment.csv\")\n",
    "pd.set_option('display.max_columns', None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "da4f9cd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Requester id</th>\n",
       "      <th>Group</th>\n",
       "      <th>Status</th>\n",
       "      <th>Priority</th>\n",
       "      <th>Via</th>\n",
       "      <th>Created at</th>\n",
       "      <th>Updated at</th>\n",
       "      <th>Assigned at</th>\n",
       "      <th>Initially assigned at</th>\n",
       "      <th>Solved at</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Satisfaction Score</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in minutes within business hours</th>\n",
       "      <th>First resolution time in minutes</th>\n",
       "      <th>First resolution time in minutes within business hours</th>\n",
       "      <th>Full resolution time in minutes</th>\n",
       "      <th>Full resolution time in minutes within business hours</th>\n",
       "      <th>Requester wait time in minutes</th>\n",
       "      <th>Requester wait time in minutes within business hours</th>\n",
       "      <th>Manual Tagging of Categories [list]</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>297732</td>\n",
       "      <td>10300555531549</td>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>2023-04-08 20:52:00</td>\n",
       "      <td>2023-06-14 16:30:00</td>\n",
       "      <td>2023-04-09 10:28:00</td>\n",
       "      <td>2023-04-09 10:28:00</td>\n",
       "      <td>2023-06-14 16:30:00</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>173.0</td>\n",
       "      <td>12975.0</td>\n",
       "      <td>6488.0</td>\n",
       "      <td>96218.0</td>\n",
       "      <td>47978.0</td>\n",
       "      <td>17853.0</td>\n",
       "      <td>8516.0</td>\n",
       "      <td>Is my treatment covered (IMTC)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>311457</td>\n",
       "      <td>10420228868125</td>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>2023-04-24 19:32:00</td>\n",
       "      <td>2023-06-15 16:37:00</td>\n",
       "      <td>2023-04-25 10:18:00</td>\n",
       "      <td>2023-04-25 10:18:00</td>\n",
       "      <td>2023-05-26 16:26:00</td>\n",
       "      <td>765.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>1527.0</td>\n",
       "      <td>2984.0</td>\n",
       "      <td>1527.0</td>\n",
       "      <td>45893.0</td>\n",
       "      <td>22853.0</td>\n",
       "      <td>30113.0</td>\n",
       "      <td>15139.0</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>329907</td>\n",
       "      <td>10991633548957</td>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>2023-05-16 17:43:00</td>\n",
       "      <td>2023-05-30 14:56:00</td>\n",
       "      <td>2023-05-16 18:18:00</td>\n",
       "      <td>2023-05-16 18:18:00</td>\n",
       "      <td>2023-05-30 14:56:00</td>\n",
       "      <td>333.0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>61.0</td>\n",
       "      <td>1563.0</td>\n",
       "      <td>843.0</td>\n",
       "      <td>19993.0</td>\n",
       "      <td>9913.0</td>\n",
       "      <td>7115.0</td>\n",
       "      <td>3335.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>301553</td>\n",
       "      <td>10376247288477</td>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>2023-04-13 11:03:00</td>\n",
       "      <td>2023-06-15 20:55:00</td>\n",
       "      <td>2023-04-13 13:04:00</td>\n",
       "      <td>2023-04-13 13:04:00</td>\n",
       "      <td>2023-06-15 20:55:00</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>381.0</td>\n",
       "      <td>2888.0</td>\n",
       "      <td>1448.0</td>\n",
       "      <td>91313.0</td>\n",
       "      <td>45953.0</td>\n",
       "      <td>18221.0</td>\n",
       "      <td>9401.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>310966</td>\n",
       "      <td>7302858920989</td>\n",
       "      <td>Support</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>2023-04-24 13:21:00</td>\n",
       "      <td>2023-06-08 18:37:00</td>\n",
       "      <td>2023-04-27 14:48:00</td>\n",
       "      <td>2023-04-24 13:48:00</td>\n",
       "      <td>2023-05-19 18:25:00</td>\n",
       "      <td>605.0</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>37.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>36304.0</td>\n",
       "      <td>17739.0</td>\n",
       "      <td>7427.0</td>\n",
       "      <td>4008.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Id    Requester id                 Group  Status Priority   Via  \\\n",
       "0  297732  10300555531549               Support  Solved      Low  Mail   \n",
       "1  311457  10420228868125  Reimbursement Claims  Closed      Low  Mail   \n",
       "2  329907  10991633548957               Support  Solved      Low  Mail   \n",
       "3  301553  10376247288477               Support  Solved      Low  Mail   \n",
       "4  310966   7302858920989               Support  Closed      Low  Mail   \n",
       "\n",
       "            Created at           Updated at          Assigned at  \\\n",
       "0  2023-04-08 20:52:00  2023-06-14 16:30:00  2023-04-09 10:28:00   \n",
       "1  2023-04-24 19:32:00  2023-06-15 16:37:00  2023-04-25 10:18:00   \n",
       "2  2023-05-16 17:43:00  2023-05-30 14:56:00  2023-05-16 18:18:00   \n",
       "3  2023-04-13 11:03:00  2023-06-15 20:55:00  2023-04-13 13:04:00   \n",
       "4  2023-04-24 13:21:00  2023-06-08 18:37:00  2023-04-27 14:48:00   \n",
       "\n",
       "  Initially assigned at            Solved at  Resolution time  \\\n",
       "0   2023-04-09 10:28:00  2023-06-14 16:30:00           1604.0   \n",
       "1   2023-04-25 10:18:00  2023-05-26 16:26:00            765.0   \n",
       "2   2023-05-16 18:18:00  2023-05-30 14:56:00            333.0   \n",
       "3   2023-04-13 13:04:00  2023-06-15 20:55:00           1522.0   \n",
       "4   2023-04-24 13:48:00  2023-05-19 18:25:00            605.0   \n",
       "\n",
       "  Satisfaction Score  Reopens  Replies  \\\n",
       "0            Offered       11       11   \n",
       "1                NaN       10       10   \n",
       "2                  4       10       11   \n",
       "3            Offered        9        9   \n",
       "4                  4        9        9   \n",
       "\n",
       "   First reply time in minutes within business hours  \\\n",
       "0                                              173.0   \n",
       "1                                             1527.0   \n",
       "2                                               61.0   \n",
       "3                                              381.0   \n",
       "4                                               37.0   \n",
       "\n",
       "   First resolution time in minutes  \\\n",
       "0                           12975.0   \n",
       "1                            2984.0   \n",
       "2                            1563.0   \n",
       "3                            2888.0   \n",
       "4                              37.0   \n",
       "\n",
       "   First resolution time in minutes within business hours  \\\n",
       "0                                             6488.0        \n",
       "1                                             1527.0        \n",
       "2                                              843.0        \n",
       "3                                             1448.0        \n",
       "4                                               37.0        \n",
       "\n",
       "   Full resolution time in minutes  \\\n",
       "0                          96218.0   \n",
       "1                          45893.0   \n",
       "2                          19993.0   \n",
       "3                          91313.0   \n",
       "4                          36304.0   \n",
       "\n",
       "   Full resolution time in minutes within business hours  \\\n",
       "0                                            47978.0       \n",
       "1                                            22853.0       \n",
       "2                                             9913.0       \n",
       "3                                            45953.0       \n",
       "4                                            17739.0       \n",
       "\n",
       "   Requester wait time in minutes  \\\n",
       "0                         17853.0   \n",
       "1                         30113.0   \n",
       "2                          7115.0   \n",
       "3                         18221.0   \n",
       "4                          7427.0   \n",
       "\n",
       "   Requester wait time in minutes within business hours  \\\n",
       "0                                             8516.0      \n",
       "1                                            15139.0      \n",
       "2                                             3335.0      \n",
       "3                                             9401.0      \n",
       "4                                             4008.0      \n",
       "\n",
       "  Manual Tagging of Categories [list]  \n",
       "0      Is my treatment covered (IMTC)  \n",
       "1                                   -  \n",
       "2                              Claims  \n",
       "3                              Claims  \n",
       "4                              Claims  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Return top 5 rows\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7718c516",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(16476, 23)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# shows total number of rows and columns in the data\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5b271ea3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 16476 entries, 0 to 16475\n",
      "Data columns (total 23 columns):\n",
      " #   Column                                                  Non-Null Count  Dtype  \n",
      "---  ------                                                  --------------  -----  \n",
      " 0   Id                                                      16476 non-null  int64  \n",
      " 1   Requester id                                            16476 non-null  int64  \n",
      " 2   Group                                                   16476 non-null  object \n",
      " 3   Status                                                  16476 non-null  object \n",
      " 4   Priority                                                16476 non-null  object \n",
      " 5   Via                                                     16476 non-null  object \n",
      " 6   Created at                                              16476 non-null  object \n",
      " 7   Updated at                                              16476 non-null  object \n",
      " 8   Assigned at                                             16476 non-null  object \n",
      " 9   Initially assigned at                                   16476 non-null  object \n",
      " 10  Solved at                                               16476 non-null  object \n",
      " 11  Resolution time                                         14409 non-null  float64\n",
      " 12  Satisfaction Score                                      5453 non-null   object \n",
      " 13  Reopens                                                 16476 non-null  int64  \n",
      " 14  Replies                                                 16476 non-null  int64  \n",
      " 15  First reply time in minutes within business hours       12760 non-null  float64\n",
      " 16  First resolution time in minutes                        14834 non-null  float64\n",
      " 17  First resolution time in minutes within business hours  14834 non-null  float64\n",
      " 18  Full resolution time in minutes                         14409 non-null  float64\n",
      " 19  Full resolution time in minutes within business hours   14409 non-null  float64\n",
      " 20  Requester wait time in minutes                          16327 non-null  float64\n",
      " 21  Requester wait time in minutes within business hours    16327 non-null  float64\n",
      " 22  Manual Tagging of Categories [list]                     16476 non-null  object \n",
      "dtypes: float64(8), int64(4), object(11)\n",
      "memory usage: 2.9+ MB\n"
     ]
    }
   ],
   "source": [
    "#Data types of the table\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fe7abb58",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>Requester id</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in minutes within business hours</th>\n",
       "      <th>First resolution time in minutes</th>\n",
       "      <th>First resolution time in minutes within business hours</th>\n",
       "      <th>Full resolution time in minutes</th>\n",
       "      <th>Full resolution time in minutes within business hours</th>\n",
       "      <th>Requester wait time in minutes</th>\n",
       "      <th>Requester wait time in minutes within business hours</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>16476.000000</td>\n",
       "      <td>1.647600e+04</td>\n",
       "      <td>14409.000000</td>\n",
       "      <td>16476.000000</td>\n",
       "      <td>16476.000000</td>\n",
       "      <td>12760.000000</td>\n",
       "      <td>14834.000000</td>\n",
       "      <td>14834.000000</td>\n",
       "      <td>14409.000000</td>\n",
       "      <td>14409.000000</td>\n",
       "      <td>16327.000000</td>\n",
       "      <td>16327.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>316876.239743</td>\n",
       "      <td>8.422350e+12</td>\n",
       "      <td>205.246235</td>\n",
       "      <td>0.242899</td>\n",
       "      <td>2.152525</td>\n",
       "      <td>1852.113950</td>\n",
       "      <td>10177.772752</td>\n",
       "      <td>5131.839693</td>\n",
       "      <td>12314.136304</td>\n",
       "      <td>6196.644320</td>\n",
       "      <td>10443.141238</td>\n",
       "      <td>5259.864213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>15369.829459</td>\n",
       "      <td>1.545776e+12</td>\n",
       "      <td>283.541651</td>\n",
       "      <td>0.705320</td>\n",
       "      <td>2.681740</td>\n",
       "      <td>3916.902674</td>\n",
       "      <td>15243.191721</td>\n",
       "      <td>7625.355098</td>\n",
       "      <td>17012.495327</td>\n",
       "      <td>8504.443833</td>\n",
       "      <td>15858.506931</td>\n",
       "      <td>7917.994694</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>291015.000000</td>\n",
       "      <td>5.879787e+12</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>303624.750000</td>\n",
       "      <td>7.273930e+12</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>122.000000</td>\n",
       "      <td>916.250000</td>\n",
       "      <td>437.000000</td>\n",
       "      <td>1340.000000</td>\n",
       "      <td>652.000000</td>\n",
       "      <td>936.000000</td>\n",
       "      <td>491.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>316564.500000</td>\n",
       "      <td>7.306863e+12</td>\n",
       "      <td>96.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>478.000000</td>\n",
       "      <td>4299.000000</td>\n",
       "      <td>2154.000000</td>\n",
       "      <td>5751.000000</td>\n",
       "      <td>2880.000000</td>\n",
       "      <td>4238.000000</td>\n",
       "      <td>2126.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>330251.250000</td>\n",
       "      <td>1.011376e+13</td>\n",
       "      <td>259.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1935.250000</td>\n",
       "      <td>12085.750000</td>\n",
       "      <td>6178.750000</td>\n",
       "      <td>15559.000000</td>\n",
       "      <td>7847.000000</td>\n",
       "      <td>12176.000000</td>\n",
       "      <td>6212.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>344028.000000</td>\n",
       "      <td>1.129824e+13</td>\n",
       "      <td>1805.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>52770.000000</td>\n",
       "      <td>108322.000000</td>\n",
       "      <td>54322.000000</td>\n",
       "      <td>108322.000000</td>\n",
       "      <td>54322.000000</td>\n",
       "      <td>108942.000000</td>\n",
       "      <td>54355.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Id  Requester id  Resolution time       Reopens  \\\n",
       "count   16476.000000  1.647600e+04     14409.000000  16476.000000   \n",
       "mean   316876.239743  8.422350e+12       205.246235      0.242899   \n",
       "std     15369.829459  1.545776e+12       283.541651      0.705320   \n",
       "min    291015.000000  5.879787e+12         0.000000      0.000000   \n",
       "25%    303624.750000  7.273930e+12        22.000000      0.000000   \n",
       "50%    316564.500000  7.306863e+12        96.000000      0.000000   \n",
       "75%    330251.250000  1.011376e+13       259.000000      0.000000   \n",
       "max    344028.000000  1.129824e+13      1805.000000     11.000000   \n",
       "\n",
       "            Replies  First reply time in minutes within business hours  \\\n",
       "count  16476.000000                                       12760.000000   \n",
       "mean       2.152525                                        1852.113950   \n",
       "std        2.681740                                        3916.902674   \n",
       "min        0.000000                                           0.000000   \n",
       "25%        1.000000                                         122.000000   \n",
       "50%        1.000000                                         478.000000   \n",
       "75%        3.000000                                        1935.250000   \n",
       "max       36.000000                                       52770.000000   \n",
       "\n",
       "       First resolution time in minutes  \\\n",
       "count                      14834.000000   \n",
       "mean                       10177.772752   \n",
       "std                        15243.191721   \n",
       "min                            0.000000   \n",
       "25%                          916.250000   \n",
       "50%                         4299.000000   \n",
       "75%                        12085.750000   \n",
       "max                       108322.000000   \n",
       "\n",
       "       First resolution time in minutes within business hours  \\\n",
       "count                                       14834.000000        \n",
       "mean                                         5131.839693        \n",
       "std                                          7625.355098        \n",
       "min                                             0.000000        \n",
       "25%                                           437.000000        \n",
       "50%                                          2154.000000        \n",
       "75%                                          6178.750000        \n",
       "max                                         54322.000000        \n",
       "\n",
       "       Full resolution time in minutes  \\\n",
       "count                     14409.000000   \n",
       "mean                      12314.136304   \n",
       "std                       17012.495327   \n",
       "min                           0.000000   \n",
       "25%                        1340.000000   \n",
       "50%                        5751.000000   \n",
       "75%                       15559.000000   \n",
       "max                      108322.000000   \n",
       "\n",
       "       Full resolution time in minutes within business hours  \\\n",
       "count                                       14409.000000       \n",
       "mean                                         6196.644320       \n",
       "std                                          8504.443833       \n",
       "min                                             0.000000       \n",
       "25%                                           652.000000       \n",
       "50%                                          2880.000000       \n",
       "75%                                          7847.000000       \n",
       "max                                         54322.000000       \n",
       "\n",
       "       Requester wait time in minutes  \\\n",
       "count                    16327.000000   \n",
       "mean                     10443.141238   \n",
       "std                      15858.506931   \n",
       "min                          0.000000   \n",
       "25%                        936.000000   \n",
       "50%                       4238.000000   \n",
       "75%                      12176.000000   \n",
       "max                     108942.000000   \n",
       "\n",
       "       Requester wait time in minutes within business hours  \n",
       "count                                       16327.000000     \n",
       "mean                                         5259.864213     \n",
       "std                                          7917.994694     \n",
       "min                                             0.000000     \n",
       "25%                                           491.000000     \n",
       "50%                                          2126.000000     \n",
       "75%                                          6212.000000     \n",
       "max                                         54355.000000     "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Only work for numerical columns\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "66a017b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Id', 'Requester id', 'Group', 'Status', 'Priority', 'Via',\n",
       "       'Created at', 'Updated at', 'Assigned at', 'Initially assigned at',\n",
       "       'Solved at', 'Resolution time', 'Satisfaction Score', 'Reopens',\n",
       "       'Replies', 'First reply time in minutes within business hours',\n",
       "       'First resolution time in minutes',\n",
       "       'First resolution time in minutes within business hours',\n",
       "       'Full resolution time in minutes',\n",
       "       'Full resolution time in minutes within business hours',\n",
       "       'Requester wait time in minutes',\n",
       "       'Requester wait time in minutes within business hours',\n",
       "       'Manual Tagging of Categories [list]'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "20975155",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6764"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Requester id'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb5fde7e",
   "metadata": {},
   "source": [
    "Conclusion - \n",
    "1. The data has 16476 Rows and 23 Columns\n",
    "3. Out of 23, 12 are having integer values while 11 have categorical columns\n",
    "4. There are total 6764 unique Requester Id"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3dc29282",
   "metadata": {},
   "source": [
    "# Analyzing the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ce0a00ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_hidden = df.drop(['Id', 'Requester id', 'Created at', 'Updated at', 'Assigned at', 'Initially assigned at','Solved at'], axis=1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "252d5966",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11023"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking null values\n",
    "df['Satisfaction Score'].isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3c2242cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Offered    4640\n",
       "5           409\n",
       "4           311\n",
       "3            64\n",
       "1            15\n",
       "2            14\n",
       "Name: Satisfaction Score, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Satisfaction Score'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "951fd8c3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Group</th>\n",
       "      <th>Status</th>\n",
       "      <th>Priority</th>\n",
       "      <th>Via</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Satisfaction Score</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in minutes within business hours</th>\n",
       "      <th>First resolution time in minutes</th>\n",
       "      <th>First resolution time in minutes within business hours</th>\n",
       "      <th>Full resolution time in minutes</th>\n",
       "      <th>Full resolution time in minutes within business hours</th>\n",
       "      <th>Requester wait time in minutes</th>\n",
       "      <th>Requester wait time in minutes within business hours</th>\n",
       "      <th>Manual Tagging of Categories [list]</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>173.0</td>\n",
       "      <td>12975.0</td>\n",
       "      <td>6488.0</td>\n",
       "      <td>96218.0</td>\n",
       "      <td>47978.0</td>\n",
       "      <td>17853.0</td>\n",
       "      <td>8516.0</td>\n",
       "      <td>Is my treatment covered (IMTC)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>765.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>1527.0</td>\n",
       "      <td>2984.0</td>\n",
       "      <td>1527.0</td>\n",
       "      <td>45893.0</td>\n",
       "      <td>22853.0</td>\n",
       "      <td>30113.0</td>\n",
       "      <td>15139.0</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>333.0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>61.0</td>\n",
       "      <td>1563.0</td>\n",
       "      <td>843.0</td>\n",
       "      <td>19993.0</td>\n",
       "      <td>9913.0</td>\n",
       "      <td>7115.0</td>\n",
       "      <td>3335.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>381.0</td>\n",
       "      <td>2888.0</td>\n",
       "      <td>1448.0</td>\n",
       "      <td>91313.0</td>\n",
       "      <td>45953.0</td>\n",
       "      <td>18221.0</td>\n",
       "      <td>9401.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Support</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>605.0</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>37.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>36304.0</td>\n",
       "      <td>17739.0</td>\n",
       "      <td>7427.0</td>\n",
       "      <td>4008.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Group  Status Priority   Via  Resolution time  \\\n",
       "0               Support  Solved      Low  Mail           1604.0   \n",
       "1  Reimbursement Claims  Closed      Low  Mail            765.0   \n",
       "2               Support  Solved      Low  Mail            333.0   \n",
       "3               Support  Solved      Low  Mail           1522.0   \n",
       "4               Support  Closed      Low  Mail            605.0   \n",
       "\n",
       "  Satisfaction Score  Reopens  Replies  \\\n",
       "0            Offered       11       11   \n",
       "1                NaN       10       10   \n",
       "2                  4       10       11   \n",
       "3            Offered        9        9   \n",
       "4                  4        9        9   \n",
       "\n",
       "   First reply time in minutes within business hours  \\\n",
       "0                                              173.0   \n",
       "1                                             1527.0   \n",
       "2                                               61.0   \n",
       "3                                              381.0   \n",
       "4                                               37.0   \n",
       "\n",
       "   First resolution time in minutes  \\\n",
       "0                           12975.0   \n",
       "1                            2984.0   \n",
       "2                            1563.0   \n",
       "3                            2888.0   \n",
       "4                              37.0   \n",
       "\n",
       "   First resolution time in minutes within business hours  \\\n",
       "0                                             6488.0        \n",
       "1                                             1527.0        \n",
       "2                                              843.0        \n",
       "3                                             1448.0        \n",
       "4                                               37.0        \n",
       "\n",
       "   Full resolution time in minutes  \\\n",
       "0                          96218.0   \n",
       "1                          45893.0   \n",
       "2                          19993.0   \n",
       "3                          91313.0   \n",
       "4                          36304.0   \n",
       "\n",
       "   Full resolution time in minutes within business hours  \\\n",
       "0                                            47978.0       \n",
       "1                                            22853.0       \n",
       "2                                             9913.0       \n",
       "3                                            45953.0       \n",
       "4                                            17739.0       \n",
       "\n",
       "   Requester wait time in minutes  \\\n",
       "0                         17853.0   \n",
       "1                         30113.0   \n",
       "2                          7115.0   \n",
       "3                         18221.0   \n",
       "4                          7427.0   \n",
       "\n",
       "   Requester wait time in minutes within business hours  \\\n",
       "0                                             8516.0      \n",
       "1                                            15139.0      \n",
       "2                                             3335.0      \n",
       "3                                             9401.0      \n",
       "4                                             4008.0      \n",
       "\n",
       "  Manual Tagging of Categories [list]  \n",
       "0      Is my treatment covered (IMTC)  \n",
       "1                                   -  \n",
       "2                              Claims  \n",
       "3                              Claims  \n",
       "4                              Claims  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0eedba08",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['First reply time in minutes within business hours']=df['First reply time in minutes within business hours'].apply(lambda x :x/60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e7b8d38e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.rename(columns = {'First reply time in minutes within business hours':'First reply time in hours within business hours'}, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "55bfa62c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Group</th>\n",
       "      <th>Status</th>\n",
       "      <th>Priority</th>\n",
       "      <th>Via</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Satisfaction Score</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in hours within business hours</th>\n",
       "      <th>First resolution time in minutes</th>\n",
       "      <th>First resolution time in minutes within business hours</th>\n",
       "      <th>Full resolution time in minutes</th>\n",
       "      <th>Full resolution time in minutes within business hours</th>\n",
       "      <th>Requester wait time in minutes</th>\n",
       "      <th>Requester wait time in minutes within business hours</th>\n",
       "      <th>Manual Tagging of Categories [list]</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>2.883333</td>\n",
       "      <td>12975.0</td>\n",
       "      <td>6488.0</td>\n",
       "      <td>96218.0</td>\n",
       "      <td>47978.0</td>\n",
       "      <td>17853.0</td>\n",
       "      <td>8516.0</td>\n",
       "      <td>Is my treatment covered (IMTC)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>765.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>2984.0</td>\n",
       "      <td>1527.0</td>\n",
       "      <td>45893.0</td>\n",
       "      <td>22853.0</td>\n",
       "      <td>30113.0</td>\n",
       "      <td>15139.0</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>333.0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>1.016667</td>\n",
       "      <td>1563.0</td>\n",
       "      <td>843.0</td>\n",
       "      <td>19993.0</td>\n",
       "      <td>9913.0</td>\n",
       "      <td>7115.0</td>\n",
       "      <td>3335.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>6.350000</td>\n",
       "      <td>2888.0</td>\n",
       "      <td>1448.0</td>\n",
       "      <td>91313.0</td>\n",
       "      <td>45953.0</td>\n",
       "      <td>18221.0</td>\n",
       "      <td>9401.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Support</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>605.0</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>37.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>36304.0</td>\n",
       "      <td>17739.0</td>\n",
       "      <td>7427.0</td>\n",
       "      <td>4008.0</td>\n",
       "      <td>Claims</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Group  Status Priority   Via  Resolution time  \\\n",
       "0               Support  Solved      Low  Mail           1604.0   \n",
       "1  Reimbursement Claims  Closed      Low  Mail            765.0   \n",
       "2               Support  Solved      Low  Mail            333.0   \n",
       "3               Support  Solved      Low  Mail           1522.0   \n",
       "4               Support  Closed      Low  Mail            605.0   \n",
       "\n",
       "  Satisfaction Score  Reopens  Replies  \\\n",
       "0            Offered       11       11   \n",
       "1                NaN       10       10   \n",
       "2                  4       10       11   \n",
       "3            Offered        9        9   \n",
       "4                  4        9        9   \n",
       "\n",
       "   First reply time in hours within business hours  \\\n",
       "0                                         2.883333   \n",
       "1                                        25.450000   \n",
       "2                                         1.016667   \n",
       "3                                         6.350000   \n",
       "4                                         0.616667   \n",
       "\n",
       "   First resolution time in minutes  \\\n",
       "0                           12975.0   \n",
       "1                            2984.0   \n",
       "2                            1563.0   \n",
       "3                            2888.0   \n",
       "4                              37.0   \n",
       "\n",
       "   First resolution time in minutes within business hours  \\\n",
       "0                                             6488.0        \n",
       "1                                             1527.0        \n",
       "2                                              843.0        \n",
       "3                                             1448.0        \n",
       "4                                               37.0        \n",
       "\n",
       "   Full resolution time in minutes  \\\n",
       "0                          96218.0   \n",
       "1                          45893.0   \n",
       "2                          19993.0   \n",
       "3                          91313.0   \n",
       "4                          36304.0   \n",
       "\n",
       "   Full resolution time in minutes within business hours  \\\n",
       "0                                            47978.0       \n",
       "1                                            22853.0       \n",
       "2                                             9913.0       \n",
       "3                                            45953.0       \n",
       "4                                            17739.0       \n",
       "\n",
       "   Requester wait time in minutes  \\\n",
       "0                         17853.0   \n",
       "1                         30113.0   \n",
       "2                          7115.0   \n",
       "3                         18221.0   \n",
       "4                          7427.0   \n",
       "\n",
       "   Requester wait time in minutes within business hours  \\\n",
       "0                                             8516.0      \n",
       "1                                            15139.0      \n",
       "2                                             3335.0      \n",
       "3                                             9401.0      \n",
       "4                                             4008.0      \n",
       "\n",
       "  Manual Tagging of Categories [list]  \n",
       "0      Is my treatment covered (IMTC)  \n",
       "1                                   -  \n",
       "2                              Claims  \n",
       "3                              Claims  \n",
       "4                              Claims  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "cd367856",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['First resolution time in hours within business hours']=df['First resolution time in minutes within business hours'].apply(lambda x :x/60)\n",
    "df['First resolution time in hours']=df['First resolution time in minutes'].apply(lambda x :x/60)\n",
    "df['Full resolution time in hours within business hours']=df['Full resolution time in minutes within business hours'].apply(lambda x :x/60)\n",
    "df['Full resolution time in hours']=df['Full resolution time in minutes'].apply(lambda x :x/60)\n",
    "df['Requester wait time in hours']=df['Requester wait time in minutes'].apply(lambda x :x/60)\n",
    "df['Requester wait time in hours within business hours']=df['Requester wait time in minutes within business hours'].apply(lambda x :x/60)\n",
    "df['Resolution time in days']=df['Resolution time'].apply(lambda x :x/24)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "aeb29245",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Group</th>\n",
       "      <th>Status</th>\n",
       "      <th>Priority</th>\n",
       "      <th>Via</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Satisfaction Score</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in hours within business hours</th>\n",
       "      <th>First resolution time in minutes</th>\n",
       "      <th>First resolution time in minutes within business hours</th>\n",
       "      <th>Full resolution time in minutes</th>\n",
       "      <th>Full resolution time in minutes within business hours</th>\n",
       "      <th>Requester wait time in minutes</th>\n",
       "      <th>Requester wait time in minutes within business hours</th>\n",
       "      <th>Manual Tagging of Categories [list]</th>\n",
       "      <th>First resolution time in hours within business hours</th>\n",
       "      <th>First resolution time in hours</th>\n",
       "      <th>Full resolution time in hours within business hours</th>\n",
       "      <th>Full resolution time in hours</th>\n",
       "      <th>Requester wait time in hours</th>\n",
       "      <th>Requester wait time in hours within business hours</th>\n",
       "      <th>Resolution time in days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>2.883333</td>\n",
       "      <td>12975.0</td>\n",
       "      <td>6488.0</td>\n",
       "      <td>96218.0</td>\n",
       "      <td>47978.0</td>\n",
       "      <td>17853.0</td>\n",
       "      <td>8516.0</td>\n",
       "      <td>Is my treatment covered (IMTC)</td>\n",
       "      <td>108.133333</td>\n",
       "      <td>216.250000</td>\n",
       "      <td>799.633333</td>\n",
       "      <td>1603.633333</td>\n",
       "      <td>297.550000</td>\n",
       "      <td>141.933333</td>\n",
       "      <td>66.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>765.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>2984.0</td>\n",
       "      <td>1527.0</td>\n",
       "      <td>45893.0</td>\n",
       "      <td>22853.0</td>\n",
       "      <td>30113.0</td>\n",
       "      <td>15139.0</td>\n",
       "      <td>-</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>49.733333</td>\n",
       "      <td>380.883333</td>\n",
       "      <td>764.883333</td>\n",
       "      <td>501.883333</td>\n",
       "      <td>252.316667</td>\n",
       "      <td>31.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>333.0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>1.016667</td>\n",
       "      <td>1563.0</td>\n",
       "      <td>843.0</td>\n",
       "      <td>19993.0</td>\n",
       "      <td>9913.0</td>\n",
       "      <td>7115.0</td>\n",
       "      <td>3335.0</td>\n",
       "      <td>Claims</td>\n",
       "      <td>14.050000</td>\n",
       "      <td>26.050000</td>\n",
       "      <td>165.216667</td>\n",
       "      <td>333.216667</td>\n",
       "      <td>118.583333</td>\n",
       "      <td>55.583333</td>\n",
       "      <td>13.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>6.350000</td>\n",
       "      <td>2888.0</td>\n",
       "      <td>1448.0</td>\n",
       "      <td>91313.0</td>\n",
       "      <td>45953.0</td>\n",
       "      <td>18221.0</td>\n",
       "      <td>9401.0</td>\n",
       "      <td>Claims</td>\n",
       "      <td>24.133333</td>\n",
       "      <td>48.133333</td>\n",
       "      <td>765.883333</td>\n",
       "      <td>1521.883333</td>\n",
       "      <td>303.683333</td>\n",
       "      <td>156.683333</td>\n",
       "      <td>63.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Support</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>605.0</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>37.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>36304.0</td>\n",
       "      <td>17739.0</td>\n",
       "      <td>7427.0</td>\n",
       "      <td>4008.0</td>\n",
       "      <td>Claims</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>295.650000</td>\n",
       "      <td>605.066667</td>\n",
       "      <td>123.783333</td>\n",
       "      <td>66.800000</td>\n",
       "      <td>25.208333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Group  Status Priority   Via  Resolution time  \\\n",
       "0               Support  Solved      Low  Mail           1604.0   \n",
       "1  Reimbursement Claims  Closed      Low  Mail            765.0   \n",
       "2               Support  Solved      Low  Mail            333.0   \n",
       "3               Support  Solved      Low  Mail           1522.0   \n",
       "4               Support  Closed      Low  Mail            605.0   \n",
       "\n",
       "  Satisfaction Score  Reopens  Replies  \\\n",
       "0            Offered       11       11   \n",
       "1                NaN       10       10   \n",
       "2                  4       10       11   \n",
       "3            Offered        9        9   \n",
       "4                  4        9        9   \n",
       "\n",
       "   First reply time in hours within business hours  \\\n",
       "0                                         2.883333   \n",
       "1                                        25.450000   \n",
       "2                                         1.016667   \n",
       "3                                         6.350000   \n",
       "4                                         0.616667   \n",
       "\n",
       "   First resolution time in minutes  \\\n",
       "0                           12975.0   \n",
       "1                            2984.0   \n",
       "2                            1563.0   \n",
       "3                            2888.0   \n",
       "4                              37.0   \n",
       "\n",
       "   First resolution time in minutes within business hours  \\\n",
       "0                                             6488.0        \n",
       "1                                             1527.0        \n",
       "2                                              843.0        \n",
       "3                                             1448.0        \n",
       "4                                               37.0        \n",
       "\n",
       "   Full resolution time in minutes  \\\n",
       "0                          96218.0   \n",
       "1                          45893.0   \n",
       "2                          19993.0   \n",
       "3                          91313.0   \n",
       "4                          36304.0   \n",
       "\n",
       "   Full resolution time in minutes within business hours  \\\n",
       "0                                            47978.0       \n",
       "1                                            22853.0       \n",
       "2                                             9913.0       \n",
       "3                                            45953.0       \n",
       "4                                            17739.0       \n",
       "\n",
       "   Requester wait time in minutes  \\\n",
       "0                         17853.0   \n",
       "1                         30113.0   \n",
       "2                          7115.0   \n",
       "3                         18221.0   \n",
       "4                          7427.0   \n",
       "\n",
       "   Requester wait time in minutes within business hours  \\\n",
       "0                                             8516.0      \n",
       "1                                            15139.0      \n",
       "2                                             3335.0      \n",
       "3                                             9401.0      \n",
       "4                                             4008.0      \n",
       "\n",
       "  Manual Tagging of Categories [list]  \\\n",
       "0      Is my treatment covered (IMTC)   \n",
       "1                                   -   \n",
       "2                              Claims   \n",
       "3                              Claims   \n",
       "4                              Claims   \n",
       "\n",
       "   First resolution time in hours within business hours  \\\n",
       "0                                         108.133333      \n",
       "1                                          25.450000      \n",
       "2                                          14.050000      \n",
       "3                                          24.133333      \n",
       "4                                           0.616667      \n",
       "\n",
       "   First resolution time in hours  \\\n",
       "0                      216.250000   \n",
       "1                       49.733333   \n",
       "2                       26.050000   \n",
       "3                       48.133333   \n",
       "4                        0.616667   \n",
       "\n",
       "   Full resolution time in hours within business hours  \\\n",
       "0                                         799.633333     \n",
       "1                                         380.883333     \n",
       "2                                         165.216667     \n",
       "3                                         765.883333     \n",
       "4                                         295.650000     \n",
       "\n",
       "   Full resolution time in hours  Requester wait time in hours  \\\n",
       "0                    1603.633333                    297.550000   \n",
       "1                     764.883333                    501.883333   \n",
       "2                     333.216667                    118.583333   \n",
       "3                    1521.883333                    303.683333   \n",
       "4                     605.066667                    123.783333   \n",
       "\n",
       "   Requester wait time in hours within business hours  Resolution time in days  \n",
       "0                                         141.933333                 66.833333  \n",
       "1                                         252.316667                 31.875000  \n",
       "2                                          55.583333                 13.875000  \n",
       "3                                         156.683333                 63.416667  \n",
       "4                                          66.800000                 25.208333  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "fe34d162",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_hidden = df.drop(['First resolution time in minutes', 'First resolution time in minutes within business hours', 'Full resolution time in minutes', \n",
    "                     'Full resolution time in minutes within business hours', 'Requester wait time in minutes', 'Requester wait time in minutes within business hours'], axis=1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a8a2d0e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Group</th>\n",
       "      <th>Status</th>\n",
       "      <th>Priority</th>\n",
       "      <th>Via</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Satisfaction Score</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in hours within business hours</th>\n",
       "      <th>Manual Tagging of Categories [list]</th>\n",
       "      <th>First resolution time in hours within business hours</th>\n",
       "      <th>First resolution time in hours</th>\n",
       "      <th>Full resolution time in hours within business hours</th>\n",
       "      <th>Full resolution time in hours</th>\n",
       "      <th>Requester wait time in hours</th>\n",
       "      <th>Requester wait time in hours within business hours</th>\n",
       "      <th>Resolution time in days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>2.883333</td>\n",
       "      <td>Is my treatment covered (IMTC)</td>\n",
       "      <td>108.133333</td>\n",
       "      <td>216.250000</td>\n",
       "      <td>799.633333</td>\n",
       "      <td>1603.633333</td>\n",
       "      <td>297.550000</td>\n",
       "      <td>141.933333</td>\n",
       "      <td>66.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>765.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>-</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>49.733333</td>\n",
       "      <td>380.883333</td>\n",
       "      <td>764.883333</td>\n",
       "      <td>501.883333</td>\n",
       "      <td>252.316667</td>\n",
       "      <td>31.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>333.0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>1.016667</td>\n",
       "      <td>Claims</td>\n",
       "      <td>14.050000</td>\n",
       "      <td>26.050000</td>\n",
       "      <td>165.216667</td>\n",
       "      <td>333.216667</td>\n",
       "      <td>118.583333</td>\n",
       "      <td>55.583333</td>\n",
       "      <td>13.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>6.350000</td>\n",
       "      <td>Claims</td>\n",
       "      <td>24.133333</td>\n",
       "      <td>48.133333</td>\n",
       "      <td>765.883333</td>\n",
       "      <td>1521.883333</td>\n",
       "      <td>303.683333</td>\n",
       "      <td>156.683333</td>\n",
       "      <td>63.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Support</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>605.0</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>Claims</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>295.650000</td>\n",
       "      <td>605.066667</td>\n",
       "      <td>123.783333</td>\n",
       "      <td>66.800000</td>\n",
       "      <td>25.208333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Group  Status Priority   Via  Resolution time  \\\n",
       "0               Support  Solved      Low  Mail           1604.0   \n",
       "1  Reimbursement Claims  Closed      Low  Mail            765.0   \n",
       "2               Support  Solved      Low  Mail            333.0   \n",
       "3               Support  Solved      Low  Mail           1522.0   \n",
       "4               Support  Closed      Low  Mail            605.0   \n",
       "\n",
       "  Satisfaction Score  Reopens  Replies  \\\n",
       "0            Offered       11       11   \n",
       "1                NaN       10       10   \n",
       "2                  4       10       11   \n",
       "3            Offered        9        9   \n",
       "4                  4        9        9   \n",
       "\n",
       "   First reply time in hours within business hours  \\\n",
       "0                                         2.883333   \n",
       "1                                        25.450000   \n",
       "2                                         1.016667   \n",
       "3                                         6.350000   \n",
       "4                                         0.616667   \n",
       "\n",
       "  Manual Tagging of Categories [list]  \\\n",
       "0      Is my treatment covered (IMTC)   \n",
       "1                                   -   \n",
       "2                              Claims   \n",
       "3                              Claims   \n",
       "4                              Claims   \n",
       "\n",
       "   First resolution time in hours within business hours  \\\n",
       "0                                         108.133333      \n",
       "1                                          25.450000      \n",
       "2                                          14.050000      \n",
       "3                                          24.133333      \n",
       "4                                           0.616667      \n",
       "\n",
       "   First resolution time in hours  \\\n",
       "0                      216.250000   \n",
       "1                       49.733333   \n",
       "2                       26.050000   \n",
       "3                       48.133333   \n",
       "4                        0.616667   \n",
       "\n",
       "   Full resolution time in hours within business hours  \\\n",
       "0                                         799.633333     \n",
       "1                                         380.883333     \n",
       "2                                         165.216667     \n",
       "3                                         765.883333     \n",
       "4                                         295.650000     \n",
       "\n",
       "   Full resolution time in hours  Requester wait time in hours  \\\n",
       "0                    1603.633333                    297.550000   \n",
       "1                     764.883333                    501.883333   \n",
       "2                     333.216667                    118.583333   \n",
       "3                    1521.883333                    303.683333   \n",
       "4                     605.066667                    123.783333   \n",
       "\n",
       "   Requester wait time in hours within business hours  Resolution time in days  \n",
       "0                                         141.933333                 66.833333  \n",
       "1                                         252.316667                 31.875000  \n",
       "2                                          55.583333                 13.875000  \n",
       "3                                         156.683333                 63.416667  \n",
       "4                                          66.800000                 25.208333  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "516ac7de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Closed     12270\n",
       "Solved      2139\n",
       "Hold         790\n",
       "Pending      681\n",
       "Open         470\n",
       "New          126\n",
       "Name: Status, dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Status'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1d7be918",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_hidden = df.drop(['Full resolution time in hours'], axis=1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "4cd335fa",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Group</th>\n",
       "      <th>Status</th>\n",
       "      <th>Priority</th>\n",
       "      <th>Via</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Satisfaction Score</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in hours within business hours</th>\n",
       "      <th>Manual Tagging of Categories [list]</th>\n",
       "      <th>First resolution time in hours within business hours</th>\n",
       "      <th>First resolution time in hours</th>\n",
       "      <th>Full resolution time in hours within business hours</th>\n",
       "      <th>Requester wait time in hours</th>\n",
       "      <th>Requester wait time in hours within business hours</th>\n",
       "      <th>Resolution time in days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>2.883333</td>\n",
       "      <td>Is my treatment covered (IMTC)</td>\n",
       "      <td>108.133333</td>\n",
       "      <td>216.250000</td>\n",
       "      <td>799.633333</td>\n",
       "      <td>297.550000</td>\n",
       "      <td>141.933333</td>\n",
       "      <td>66.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>765.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>-</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>49.733333</td>\n",
       "      <td>380.883333</td>\n",
       "      <td>501.883333</td>\n",
       "      <td>252.316667</td>\n",
       "      <td>31.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>333.0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>1.016667</td>\n",
       "      <td>Claims</td>\n",
       "      <td>14.050000</td>\n",
       "      <td>26.050000</td>\n",
       "      <td>165.216667</td>\n",
       "      <td>118.583333</td>\n",
       "      <td>55.583333</td>\n",
       "      <td>13.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>6.350000</td>\n",
       "      <td>Claims</td>\n",
       "      <td>24.133333</td>\n",
       "      <td>48.133333</td>\n",
       "      <td>765.883333</td>\n",
       "      <td>303.683333</td>\n",
       "      <td>156.683333</td>\n",
       "      <td>63.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Support</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>605.0</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>Claims</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>295.650000</td>\n",
       "      <td>123.783333</td>\n",
       "      <td>66.800000</td>\n",
       "      <td>25.208333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Group  Status Priority   Via  Resolution time  \\\n",
       "0               Support  Solved      Low  Mail           1604.0   \n",
       "1  Reimbursement Claims  Closed      Low  Mail            765.0   \n",
       "2               Support  Solved      Low  Mail            333.0   \n",
       "3               Support  Solved      Low  Mail           1522.0   \n",
       "4               Support  Closed      Low  Mail            605.0   \n",
       "\n",
       "  Satisfaction Score  Reopens  Replies  \\\n",
       "0            Offered       11       11   \n",
       "1                NaN       10       10   \n",
       "2                  4       10       11   \n",
       "3            Offered        9        9   \n",
       "4                  4        9        9   \n",
       "\n",
       "   First reply time in hours within business hours  \\\n",
       "0                                         2.883333   \n",
       "1                                        25.450000   \n",
       "2                                         1.016667   \n",
       "3                                         6.350000   \n",
       "4                                         0.616667   \n",
       "\n",
       "  Manual Tagging of Categories [list]  \\\n",
       "0      Is my treatment covered (IMTC)   \n",
       "1                                   -   \n",
       "2                              Claims   \n",
       "3                              Claims   \n",
       "4                              Claims   \n",
       "\n",
       "   First resolution time in hours within business hours  \\\n",
       "0                                         108.133333      \n",
       "1                                          25.450000      \n",
       "2                                          14.050000      \n",
       "3                                          24.133333      \n",
       "4                                           0.616667      \n",
       "\n",
       "   First resolution time in hours  \\\n",
       "0                      216.250000   \n",
       "1                       49.733333   \n",
       "2                       26.050000   \n",
       "3                       48.133333   \n",
       "4                        0.616667   \n",
       "\n",
       "   Full resolution time in hours within business hours  \\\n",
       "0                                         799.633333     \n",
       "1                                         380.883333     \n",
       "2                                         165.216667     \n",
       "3                                         765.883333     \n",
       "4                                         295.650000     \n",
       "\n",
       "   Requester wait time in hours  \\\n",
       "0                    297.550000   \n",
       "1                    501.883333   \n",
       "2                    118.583333   \n",
       "3                    303.683333   \n",
       "4                    123.783333   \n",
       "\n",
       "   Requester wait time in hours within business hours  Resolution time in days  \n",
       "0                                         141.933333                 66.833333  \n",
       "1                                         252.316667                 31.875000  \n",
       "2                                          55.583333                 13.875000  \n",
       "3                                         156.683333                 63.416667  \n",
       "4                                          66.800000                 25.208333  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "690f9b86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-                                   13923\n",
       "Claims                                904\n",
       "Is my treatment covered (IMTC)        678\n",
       "HR Queries                            266\n",
       "Others                                159\n",
       "Manage dependents                     148\n",
       "Health ID                             131\n",
       "Health Benefits                        75\n",
       "Not Applicable                         74\n",
       "Super Top-up (STU)                     70\n",
       "Network or Blacklisted Hospitals       28\n",
       "Telehealth                             20\n",
       "Name: Manual Tagging of Categories [list], dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Manual Tagging of Categories [list]'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "b16ad5be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                  Group  First reply time in hours within business hours\n",
      "0          Endorsements                                        70.119504\n",
      "1           Onboardings                                        22.729572\n",
      "2  Reimbursement Claims                                        25.189108\n",
      "3               Support                                         5.279955\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "grouped_data = df.groupby('Group')['First reply time in hours within business hours'].mean().reset_index()\n",
    "print(grouped_data)\n",
    "\n",
    "plt.figure(figsize=(5, 4))\n",
    "sns.barplot(data=df, x='Group', y='First reply time in hours within business hours')\n",
    "plt.xlabel('Group')\n",
    "plt.ylabel('First reply time in hours within business hours')\n",
    "plt.title('comparison of First reply Time in hours between group')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b291928e",
   "metadata": {},
   "source": [
    "Inference - \n",
    "\n",
    " - Support Team is the fastest in replying to the customer emails. They generally reply to it within 10 hours.\n",
    " - Reimbursement Claims and Onboarding teams replys to the customer emails within 24 hours.\n",
    " - Endorsements Team is the slowest in replying to the customer emails. They take around 70 hours to reply."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "4c94e66b",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                  Group  First resolution time in hours within business hours\n",
      "0          Endorsements                                         119.519399   \n",
      "1           Onboardings                                         274.378848   \n",
      "2  Reimbursement Claims                                          85.474764   \n",
      "3               Support                                          37.756956   \n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "First_resolve_time_hrs = df.groupby('Group')['First resolution time in hours within business hours'].mean().reset_index()\n",
    "print(First_resolve_time_hrs)\n",
    "\n",
    "\n",
    "plt.figure(figsize=(5, 4))\n",
    "sns.barplot(data=df, x='Group', y='First resolution time in hours within business hours')\n",
    "plt.xlabel('Group')\n",
    "plt.ylabel('First resolution time in hours within business hours')\n",
    "plt.title('Comparison of First Resolution Time between Groups')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aee10a33",
   "metadata": {},
   "source": [
    "Inference - \n",
    "\n",
    " - Support Team is the fastest in giving first resolution to the customer emails.\n",
    " \n",
    " - While Onboarding Team were replying to the first email within 24 hours. They are taking around 270 business hours for first      resolution. \n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "32c13ae4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Group\n",
       "Endorsements            70.119504\n",
       "Onboardings             22.729572\n",
       "Reimbursement Claims    25.189108\n",
       "Support                  5.279955\n",
       "dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result = df.groupby('Group')['First reply time in hours within business hours'].mean().reset_index()\n",
    "\n",
    "\n",
    "reply = pd.Series(result['First reply time in hours within business hours'].values, index=result['Group'])\n",
    "reply"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "3afbb66f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Group\n",
       "Endorsements            119.519399\n",
       "Onboardings             274.378848\n",
       "Reimbursement Claims     85.474764\n",
       "Support                  37.756956\n",
       "dtype: float64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result = df.groupby('Group')['First resolution time in hours within business hours'].mean().reset_index()\n",
    "\n",
    "\n",
    "first_resolution = pd.Series(result['First resolution time in hours within business hours'].values, index=result['Group'])\n",
    "first_resolution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "2d35b0e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Group\n",
       "Endorsements             49.399895\n",
       "Onboardings             251.649276\n",
       "Reimbursement Claims     60.285656\n",
       "Support                  32.477002\n",
       "dtype: float64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Avg time taken to reach first resolution by each group\n",
    "first_resolution - reply"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a94cf8d5",
   "metadata": {},
   "source": [
    "#### Inference - \n",
    "\n",
    " - Support Team is the fastest in providing first resolution after giving first reply to the customer emails.\n",
    " \n",
    " - While the Onboardings team are replying to the emails in normal time. They are taking nearly 5 times more than the rest of      the team in reaching first resolution.\n",
    " \n",
    " - While Endorsements team are taking the highest time in giving first reply to the emails comparitively they are quick in          providing first resolution than Onboardings and Reimbursement Claims team."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "2793ea9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Full_resolve_time_hrs = df.groupby('Group')['Full resolution time in hours within business hours'].mean().reset_index()\n",
    "Full_resolve_time_hrs\n",
    "\n",
    "\n",
    "plt.figure(figsize=(5, 6))\n",
    "sns.barplot(data=df, x='Group', y='Full resolution time in hours within business hours')\n",
    "plt.xlabel('Group')\n",
    "plt.ylabel('Full resolution time in hours within business hours')\n",
    "plt.title('Comparison of Full Resolution Time between Group')\n",
    "plt.xticks(rotation=45)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "45f3c962",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Group\n",
       "Endorsements            124.708462\n",
       "Onboardings             295.440576\n",
       "Reimbursement Claims    124.649771\n",
       "Support                  56.870915\n",
       "dtype: float64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result = df.groupby('Group')['Full resolution time in hours within business hours'].mean().reset_index()\n",
    "\n",
    "\n",
    "Full_resolution = pd.Series(result['Full resolution time in hours within business hours'].values, index=result['Group'])\n",
    "Full_resolution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "b69b160d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Group\n",
       "Endorsements             5.189064\n",
       "Onboardings             21.061728\n",
       "Reimbursement Claims    39.175006\n",
       "Support                 19.113959\n",
       "dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Time taken to reach full resolution after giving first resolution in business hours.\n",
    "Full_resolution - first_resolution"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d86ea75c",
   "metadata": {},
   "source": [
    "#### Inference - \n",
    "\n",
    " - Onboardings team took around 250 hrs to reach first resolution but they were the fastest in reaching full resolution after      providing first resolution. They were 11 times faster.\n",
    " \n",
    " - Endorsements team took very little time in reaching full resolution after giving first resolution.\n",
    " \n",
    " - Whereas Support and Reimbursement Claims team were a bit slow in reaching full resolution."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3202f5f6",
   "metadata": {},
   "source": [
    "## WHICH IS THE MOST & LEAST EFFICIENT GROUP ?\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87efd122",
   "metadata": {},
   "source": [
    "We can analyze the efficiency of the groups as follows:\n",
    "\n",
    "## Most Efficient Group:\n",
    "\n",
    "    Support - With the shortest average times for first reply, first resolution, full resolution, and time taken to reach full       resolution after giving the first resolution.\n",
    "\n",
    "## Least Efficient Group: \n",
    "\n",
    "    Onboardings - With the longest average times for first reply, first resolution, and full resolution.\n",
    "\n",
    "\n",
    "## Efficiency ratio comparison :\n",
    "  - Support is approximately 2.96 times more efficient than Endorsements for full resolution time. This means that, on average,     Support takes approximately 2.96 times less time than Endorsements to reach full resolution.\n",
    "\n",
    "  - Support is approximately 5.45 times more efficient than Onboardings for full resolution time.This implies that Support takes     approximately 5.45 times less time than Onboardings to reach full resolution, on average.\n",
    "\n",
    "  - Support is approximately 2.54 times more efficient than Reimbursement Claims for full resolution time.This suggests that         Support takes approximately 2.54 times less time than Reimbursement Claims to reach full resolution, on average.\n",
    "\n",
    "\n",
    "## Formula used for calculating Efficiency ratio :\n",
    "\n",
    "  - Efficiency Ratio = Average Time of Support Group / Average Time of Another Group\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "349ef8b2",
   "metadata": {},
   "source": [
    "# Which group are reopening the cases most ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "69a6b76b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Endorsements            6119\n",
       "Support                 4474\n",
       "Reimbursement Claims    2837\n",
       "Onboardings              448\n",
       "Name: Group, dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# count of number of 0 reopens\n",
    "\n",
    "filtered_data_1 = df[df['Reopens'] == 0 ]\n",
    "\n",
    "filtered_data_1['Group'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "24404fbd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Endorsements            94.88\n",
       "Support                 78.91\n",
       "Reimbursement Claims    74.13\n",
       "Onboardings             84.53\n",
       "Name: Group, dtype: float64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# % of 0 reopen cases from the total cases of each group\n",
    "\n",
    "round((filtered_data_1['Group'].value_counts()/df['Group'].value_counts())*100,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "38857606",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Support                 24\n",
       "Reimbursement Claims    10\n",
       "Onboardings              2\n",
       "Endorsements             1\n",
       "Name: Group, dtype: int64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# no. of times cases were reopend more than 5 times for each group\n",
    "\n",
    "filtered_data_2 = df[df['Reopens'] > 5 ]\n",
    "\n",
    "filtered_data_2['Group'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "492f7961",
   "metadata": {},
   "source": [
    "### Inference - \n",
    "\n",
    " - Endorsements team had least number of reopen cases, so they could reach full resolution in less time from first resolution.\n",
    " \n",
    " - Support team had most number of reopen cases but it reach full resolution in less time as compare to Reimbursement claims        team.It was more efficient in handling reopen cases than any other team.\n",
    " \n",
    " - Whereas Reimbursement Claims team took the highest time to reach full resolution from first resolution.\n",
    " \n",
    "It make sense that Reimbursement Claims team took most time in handling reopen cases because doing reimbursement is a tricky business as reaching reimbursement amount would require lot of communication with customers.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "dd9c7dc9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Group</th>\n",
       "      <th>Status</th>\n",
       "      <th>Priority</th>\n",
       "      <th>Via</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Satisfaction Score</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in hours within business hours</th>\n",
       "      <th>Manual Tagging of Categories [list]</th>\n",
       "      <th>First resolution time in hours within business hours</th>\n",
       "      <th>First resolution time in hours</th>\n",
       "      <th>Full resolution time in hours within business hours</th>\n",
       "      <th>Requester wait time in hours</th>\n",
       "      <th>Requester wait time in hours within business hours</th>\n",
       "      <th>Resolution time in days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>2.883333</td>\n",
       "      <td>Is my treatment covered (IMTC)</td>\n",
       "      <td>108.133333</td>\n",
       "      <td>216.250000</td>\n",
       "      <td>799.633333</td>\n",
       "      <td>297.550000</td>\n",
       "      <td>141.933333</td>\n",
       "      <td>66.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>765.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>Not mentioned</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>49.733333</td>\n",
       "      <td>380.883333</td>\n",
       "      <td>501.883333</td>\n",
       "      <td>252.316667</td>\n",
       "      <td>31.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>333.0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>1.016667</td>\n",
       "      <td>Claims</td>\n",
       "      <td>14.050000</td>\n",
       "      <td>26.050000</td>\n",
       "      <td>165.216667</td>\n",
       "      <td>118.583333</td>\n",
       "      <td>55.583333</td>\n",
       "      <td>13.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>6.350000</td>\n",
       "      <td>Claims</td>\n",
       "      <td>24.133333</td>\n",
       "      <td>48.133333</td>\n",
       "      <td>765.883333</td>\n",
       "      <td>303.683333</td>\n",
       "      <td>156.683333</td>\n",
       "      <td>63.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Support</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>605.0</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>Claims</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>295.650000</td>\n",
       "      <td>123.783333</td>\n",
       "      <td>66.800000</td>\n",
       "      <td>25.208333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Group  Status Priority   Via  Resolution time  \\\n",
       "0               Support  Solved      Low  Mail           1604.0   \n",
       "1  Reimbursement Claims  Closed      Low  Mail            765.0   \n",
       "2               Support  Solved      Low  Mail            333.0   \n",
       "3               Support  Solved      Low  Mail           1522.0   \n",
       "4               Support  Closed      Low  Mail            605.0   \n",
       "\n",
       "  Satisfaction Score  Reopens  Replies  \\\n",
       "0            Offered       11       11   \n",
       "1                NaN       10       10   \n",
       "2                  4       10       11   \n",
       "3            Offered        9        9   \n",
       "4                  4        9        9   \n",
       "\n",
       "   First reply time in hours within business hours  \\\n",
       "0                                         2.883333   \n",
       "1                                        25.450000   \n",
       "2                                         1.016667   \n",
       "3                                         6.350000   \n",
       "4                                         0.616667   \n",
       "\n",
       "  Manual Tagging of Categories [list]  \\\n",
       "0      Is my treatment covered (IMTC)   \n",
       "1                       Not mentioned   \n",
       "2                              Claims   \n",
       "3                              Claims   \n",
       "4                              Claims   \n",
       "\n",
       "   First resolution time in hours within business hours  \\\n",
       "0                                         108.133333      \n",
       "1                                          25.450000      \n",
       "2                                          14.050000      \n",
       "3                                          24.133333      \n",
       "4                                           0.616667      \n",
       "\n",
       "   First resolution time in hours  \\\n",
       "0                      216.250000   \n",
       "1                       49.733333   \n",
       "2                       26.050000   \n",
       "3                       48.133333   \n",
       "4                        0.616667   \n",
       "\n",
       "   Full resolution time in hours within business hours  \\\n",
       "0                                         799.633333     \n",
       "1                                         380.883333     \n",
       "2                                         165.216667     \n",
       "3                                         765.883333     \n",
       "4                                         295.650000     \n",
       "\n",
       "   Requester wait time in hours  \\\n",
       "0                    297.550000   \n",
       "1                    501.883333   \n",
       "2                    118.583333   \n",
       "3                    303.683333   \n",
       "4                    123.783333   \n",
       "\n",
       "   Requester wait time in hours within business hours  Resolution time in days  \n",
       "0                                         141.933333                 66.833333  \n",
       "1                                         252.316667                 31.875000  \n",
       "2                                          55.583333                 13.875000  \n",
       "3                                         156.683333                 63.416667  \n",
       "4                                          66.800000                 25.208333  "
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b20aa572",
   "metadata": {},
   "source": [
    "# Looking into Requester wait time - "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "0f0beb83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Group</th>\n",
       "      <th>Requester wait time in hours within business hours</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Endorsements</td>\n",
       "      <td>87.275334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Onboardings</td>\n",
       "      <td>65.700729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>148.044925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Support</td>\n",
       "      <td>49.498230</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Group  Requester wait time in hours within business hours\n",
       "0          Endorsements                                          87.275334 \n",
       "1           Onboardings                                          65.700729 \n",
       "2  Reimbursement Claims                                         148.044925 \n",
       "3               Support                                          49.498230 "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Avg_Wait_time = df.groupby('Group')['Requester wait time in hours within business hours'].mean().reset_index()\n",
    "Avg_Wait_time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "88ce143e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='Group', y='Requester wait time in hours within business hours', data=df);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "ca11500b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# The range of outlier is too much into support and onboardings group.Looking into it. \n",
    "\n",
    "\n",
    "support_df_1 = df[df['Group'] == 'Support']\n",
    "outliers_threshold_1 = support_df_1['Requester wait time in hours within business hours'].quantile(0.75)\n",
    "\n",
    "outliers_1 = support_df_1[support_df_1['Requester wait time in hours within business hours'] > outliers_threshold_1]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "ea9cac98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "151.94907080686895"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "outliers_1['Requester wait time in hours within business hours'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "549496d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "support_df_2 = df[df['Group'] == 'Onboardings']\n",
    "outliers_threshold_2 = support_df_2['Requester wait time in hours within business hours'].quantile(0.75)\n",
    "\n",
    "outliers_2 = support_df_2[support_df_2['Requester wait time in hours within business hours'] > outliers_threshold_2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "7efcf914",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "190.84734848484848"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "outliers_2['Requester wait time in hours within business hours'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7734d1e",
   "metadata": {},
   "source": [
    "#### Inference - \n",
    "\n",
    " - Average Requester wait time is lowest for Support team and highest for Reimbursement Claims team.\n",
    " \n",
    " - It can be seen that average wait time for top 25% of outliers for Support and Onboardings team are over 150 hrs, whereas        their overall mean is around 60 hrs.\n",
    " \n",
    " - We can look into why 25% of the queries are consuming more requester wait time."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "521fcb12",
   "metadata": {},
   "source": [
    "# \tWhat type of tickets are taking the most time to resolve?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c53f6586",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Group</th>\n",
       "      <th>Status</th>\n",
       "      <th>Priority</th>\n",
       "      <th>Via</th>\n",
       "      <th>Resolution time</th>\n",
       "      <th>Satisfaction Score</th>\n",
       "      <th>Reopens</th>\n",
       "      <th>Replies</th>\n",
       "      <th>First reply time in hours within business hours</th>\n",
       "      <th>Manual Tagging of Categories [list]</th>\n",
       "      <th>First resolution time in hours within business hours</th>\n",
       "      <th>First resolution time in hours</th>\n",
       "      <th>Full resolution time in hours within business hours</th>\n",
       "      <th>Requester wait time in hours</th>\n",
       "      <th>Requester wait time in hours within business hours</th>\n",
       "      <th>Resolution time in days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>2.883333</td>\n",
       "      <td>Is my treatment covered (IMTC)</td>\n",
       "      <td>108.133333</td>\n",
       "      <td>216.250000</td>\n",
       "      <td>799.633333</td>\n",
       "      <td>297.550000</td>\n",
       "      <td>141.933333</td>\n",
       "      <td>66.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Reimbursement Claims</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>765.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>-</td>\n",
       "      <td>25.450000</td>\n",
       "      <td>49.733333</td>\n",
       "      <td>380.883333</td>\n",
       "      <td>501.883333</td>\n",
       "      <td>252.316667</td>\n",
       "      <td>31.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>333.0</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>1.016667</td>\n",
       "      <td>Claims</td>\n",
       "      <td>14.050000</td>\n",
       "      <td>26.050000</td>\n",
       "      <td>165.216667</td>\n",
       "      <td>118.583333</td>\n",
       "      <td>55.583333</td>\n",
       "      <td>13.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Support</td>\n",
       "      <td>Solved</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>1522.0</td>\n",
       "      <td>Offered</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>6.350000</td>\n",
       "      <td>Claims</td>\n",
       "      <td>24.133333</td>\n",
       "      <td>48.133333</td>\n",
       "      <td>765.883333</td>\n",
       "      <td>303.683333</td>\n",
       "      <td>156.683333</td>\n",
       "      <td>63.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Support</td>\n",
       "      <td>Closed</td>\n",
       "      <td>Low</td>\n",
       "      <td>Mail</td>\n",
       "      <td>605.0</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>Claims</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>0.616667</td>\n",
       "      <td>295.650000</td>\n",
       "      <td>123.783333</td>\n",
       "      <td>66.800000</td>\n",
       "      <td>25.208333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Group  Status Priority   Via  Resolution time  \\\n",
       "0               Support  Solved      Low  Mail           1604.0   \n",
       "1  Reimbursement Claims  Closed      Low  Mail            765.0   \n",
       "2               Support  Solved      Low  Mail            333.0   \n",
       "3               Support  Solved      Low  Mail           1522.0   \n",
       "4               Support  Closed      Low  Mail            605.0   \n",
       "\n",
       "  Satisfaction Score  Reopens  Replies  \\\n",
       "0            Offered       11       11   \n",
       "1                NaN       10       10   \n",
       "2                  4       10       11   \n",
       "3            Offered        9        9   \n",
       "4                  4        9        9   \n",
       "\n",
       "   First reply time in hours within business hours  \\\n",
       "0                                         2.883333   \n",
       "1                                        25.450000   \n",
       "2                                         1.016667   \n",
       "3                                         6.350000   \n",
       "4                                         0.616667   \n",
       "\n",
       "  Manual Tagging of Categories [list]  \\\n",
       "0      Is my treatment covered (IMTC)   \n",
       "1                                   -   \n",
       "2                              Claims   \n",
       "3                              Claims   \n",
       "4                              Claims   \n",
       "\n",
       "   First resolution time in hours within business hours  \\\n",
       "0                                         108.133333      \n",
       "1                                          25.450000      \n",
       "2                                          14.050000      \n",
       "3                                          24.133333      \n",
       "4                                           0.616667      \n",
       "\n",
       "   First resolution time in hours  \\\n",
       "0                      216.250000   \n",
       "1                       49.733333   \n",
       "2                       26.050000   \n",
       "3                       48.133333   \n",
       "4                        0.616667   \n",
       "\n",
       "   Full resolution time in hours within business hours  \\\n",
       "0                                         799.633333     \n",
       "1                                         380.883333     \n",
       "2                                         165.216667     \n",
       "3                                         765.883333     \n",
       "4                                         295.650000     \n",
       "\n",
       "   Requester wait time in hours  \\\n",
       "0                    297.550000   \n",
       "1                    501.883333   \n",
       "2                    118.583333   \n",
       "3                    303.683333   \n",
       "4                    123.783333   \n",
       "\n",
       "   Requester wait time in hours within business hours  Resolution time in days  \n",
       "0                                         141.933333                 66.833333  \n",
       "1                                         252.316667                 31.875000  \n",
       "2                                          55.583333                 13.875000  \n",
       "3                                         156.683333                 63.416667  \n",
       "4                                          66.800000                 25.208333  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "a9954687",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Is my treatment covered (IMTC)', '-', 'Claims', 'Health ID',\n",
       "       'Others', 'Not Applicable', 'Network or Blacklisted Hospitals',\n",
       "       'Manage dependents', 'Telehealth', 'HR Queries', 'Health Benefits',\n",
       "       'Super Top-up (STU)'], dtype=object)"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "category_list=df['Manual Tagging of Categories [list]'].unique()\n",
    "category_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "42442d61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-                                   13923\n",
       "Claims                                904\n",
       "Is my treatment covered (IMTC)        678\n",
       "HR Queries                            266\n",
       "Others                                159\n",
       "Manage dependents                     148\n",
       "Health ID                             131\n",
       "Health Benefits                        75\n",
       "Not Applicable                         74\n",
       "Super Top-up (STU)                     70\n",
       "Network or Blacklisted Hospitals       28\n",
       "Telehealth                             20\n",
       "Name: Manual Tagging of Categories [list], dtype: int64"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Manual Tagging of Categories [list]'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "571a6e9f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Manual Tagging of Categories [list]']=df['Manual Tagging of Categories [list]'].apply(lambda x : 'Not mentioned' if x == '-' else x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "4004927e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Not mentioned                       13923\n",
       "Claims                                904\n",
       "Is my treatment covered (IMTC)        678\n",
       "HR Queries                            266\n",
       "Others                                159\n",
       "Manage dependents                     148\n",
       "Health ID                             131\n",
       "Health Benefits                        75\n",
       "Not Applicable                         74\n",
       "Super Top-up (STU)                     70\n",
       "Network or Blacklisted Hospitals       28\n",
       "Telehealth                             20\n",
       "Name: Manual Tagging of Categories [list], dtype: int64"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Manual Tagging of Categories [list]'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "b0d2b7ff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                     Ticket Category  Average Resolution Time\n",
      "0   Network or Blacklisted Hospitals                38.867262\n",
      "1                 Super Top-up (STU)                39.916429\n",
      "2                    Health Benefits                49.346847\n",
      "3                             Others                51.843249\n",
      "4                     Not Applicable                53.300228\n",
      "5                         Telehealth                57.565833\n",
      "6                  Manage dependents                60.864336\n",
      "7     Is my treatment covered (IMTC)                61.878105\n",
      "8                             Claims                66.892414\n",
      "9                         HR Queries               100.436165\n",
      "10                         Health ID               102.164231\n",
      "11                     Not mentioned               110.780961\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "avg_resolution_time = df.groupby('Manual Tagging of Categories [list]')['Full resolution time in hours within business hours'].mean().sort_values()\n",
    "\n",
    "table = pd.DataFrame({'Ticket Category': avg_resolution_time.index, 'Average Resolution Time': avg_resolution_time.values})\n",
    "\n",
    "print(table)\n",
    "\n",
    "# Create a bar chart to visualize the average resolution time for each ticket category\n",
    "plt.bar(avg_resolution_time.index, avg_resolution_time.values)\n",
    "plt.xlabel('Ticket Category')\n",
    "plt.ylabel('Average Resolution Time within business hours')\n",
    "plt.title('Average Resolution Time by Ticket Category')\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "808da664",
   "metadata": {},
   "source": [
    "####  Inference - \n",
    "\n",
    " - HR Queries and Health ID related query taking most time to resolve customer query."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67f50f02",
   "metadata": {},
   "source": [
    "# Create the different type of data types we can infer from this data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "276810c9",
   "metadata": {},
   "source": [
    "### From the given dataset, we can infer several types of data based on the columns provided.\n",
    "    Here are the different types of data we can infer:\n",
    "\n",
    " - Categorical Data:\n",
    "\n",
    "    - Group\n",
    "    - Status\n",
    "    - Priority\n",
    "    - Via\n",
    "        \n",
    "  - Numerical Data:\n",
    "\n",
    "    - Resolution time\n",
    "    - Reopens\n",
    "    - Replies\n",
    "    - First reply time in minutes within business hours\n",
    "    - First resolution time in minutes\n",
    "    - First resolution time in minutes within business hours\n",
    "    - Full resolution time in minutes\n",
    "    - Full resolution time in minutes within business hours\n",
    "    - Requester wait time in minutes\n",
    "    - Requester wait time in minutes within business hours\n",
    "\n",
    "        \n",
    "   - Text Data:\n",
    "\n",
    "     - Manual Tagging of Categories\n",
    "     - Manual Tagging of Categories [list]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "345918e8",
   "metadata": {},
   "source": [
    "### Power BI Dashboard Link - "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2a0a5f1",
   "metadata": {},
   "source": [
    "https://www.novypro.com/project/plum-assignment"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20dba147",
   "metadata": {},
   "source": [
    "# Snowflakes table creation and all query and integrated Snowflake with Power BI for visualisation - "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f27ba54",
   "metadata": {},
   "source": [
    "USE PLUM_ASSIGNMENT;\n",
    "\n",
    "CREATE TABLE if not exists DA_Assignment(\n",
    "Id INT PRIMARY KEY,\n",
    "Requester_id BIGINT,\n",
    "Groupss VARCHAR(25),\n",
    "Status VARCHAR(20),\n",
    "Priority VARCHAR(15),\n",
    "Via VARCHAR(50),\n",
    "Created_at DATETIME,\n",
    "Updated_at DATETIME,\n",
    "Assigned_at DATETIME,\n",
    "Initially_assigned_at DATETIME,\n",
    "Solved_at DATETIME,\n",
    "Resolution_time INT,\n",
    "Satisfaction_Score VARCHAR(25),\n",
    "Reopens INT,\n",
    "Replies INT,\n",
    "First_reply_time_in_minutes_within_business_hours INT,\n",
    "First_resolution_time_in_minutes INT,\n",
    "First_resolution_time_in_minutes_within_business_hours INT,\n",
    "Full_resolution_time_in_minutes INT,\n",
    "Full_resolution_time_in_minutes_within_business_hours INT,\n",
    "Requester_wait_time_in_minutes INT,\n",
    "Requester_wait_time_in_minutes_within_business_hours INT,\n",
    "Manual_Tagging_of_Categories_list VARCHAR(60)\n",
    ");\n",
    "\n",
    "SELECT * FROM DA_ASSIGNMENT;\n",
    "\n",
    "-- Unique Requester id\n",
    "SELECT COUNT(DISTINCT Requester_id) FROM DA_ASSIGNMENT;\n",
    "\n",
    "SELECT COUNT(DISTINCT Id) FROM DA_ASSIGNMENT;\n",
    "\n",
    "-- Each groups total number of id based on their status & Priority\n",
    "SELECT GROUPSS, STATUS, PRIORITY, COUNT(ID) FROM DA_ASSIGNMENT\n",
    "GROUP BY 1,2,3\n",
    "ORDER BY 1;\n",
    "\n",
    "-- Calculate Average time taken to solve queries for each group\n",
    "CREATE OR REPLACE TABLE OVERALL_DETAILS AS (\n",
    "SELECT GROUPSS, COUNT(*) AS total_requests, AVG((Resolution_time)/60) AS avg_resolution_time,\n",
    "       AVG((First_reply_time_in_minutes_within_business_hours)/60) AS Avg_First_Reply_Time,\n",
    "       AVG((First_resolution_time_in_minutes_within_business_hours)/60) AS Avg_First_resolution_Time,\n",
    "       AVG((Full_resolution_time_in_minutes_within_business_hours)/60) AS Avg_Full_resolution_Time,\n",
    "       AVG((Requester_wait_time_in_minutes_within_business_hours)/60) AS Avg_Requester_Wait_Time,\n",
    "       (Avg_First_resolution_Time - Avg_First_reply_Time) as time_taken_to_reach_first_resolution,\n",
    "       (Avg_Full_resolution_Time - Avg_First_resolution_Time) as time_taken_for_full_resolution\n",
    "FROM DA_ASSIGNMENT\n",
    "GROUP BY 1\n",
    "ORDER BY avg_resolution_time DESC);\n",
    "\n",
    "\n",
    "-- Calculate efficiency numbers\n",
    "CREATE OR REPLACE TABLE OVERALL_VIEW AS (\n",
    "SELECT Groupss,\n",
    "    COUNT(*) AS TotalTickets,\n",
    "    SUM(CASE WHEN (Full_resolution_time_in_minutes_within_business_hours/ 60) <= 60 THEN 1 ELSE 0 END) AS \n",
    "    TicketsResolvedWithin1Hour,\n",
    "    SUM(CASE WHEN (Full_resolution_time_in_minutes_within_business_hours/ 60) > 60 AND \n",
    "    (Full_resolution_time_in_minutes_within_business_hours <= 120/60) THEN 1 ELSE 0 END) AS TicketsResolvedWithin2Hours,\n",
    "    SUM(CASE WHEN (Full_resolution_time_in_minutes_within_business_hours/60) > 120 AND \n",
    "    (Full_resolution_time_in_minutes_within_business_hours/60) <= 240 THEN 1 ELSE 0 END) AS TicketsResolvedWithin4Hours,\n",
    "    SUM(CASE WHEN (Full_resolution_time_in_minutes_within_business_hours/60) > 240 THEN 1 ELSE 0 END) AS \n",
    "    TicketsResolvedAfter4Hours,\n",
    "    AVG((Full_resolution_time_in_minutes_within_business_hours)/60) AS AverageResolutionTime\n",
    "FROM DA_ASSIGNMENT\n",
    "group by 1);\n",
    "\n",
    "\n",
    "-- Average Resolution Time by Priority\n",
    "CREATE TABLE PRIORITY_CASES AS (\n",
    "SELECT Priority, AVG((Full_resolution_time_in_minutes_within_business_hours)/60) AS Avg_Resolution_Time\n",
    "FROM DA_ASSIGNMENT\n",
    "GROUP BY 1);\n",
    "\n",
    "\n",
    "-- Create a table showing average resolution time by ticket category\n",
    "CREATE TABLE category_resolution_time AS\n",
    "SELECT Manual_Tagging_of_Categories_list AS Category,\n",
    "  AVG((Full_resolution_time_in_minutes_within_business_hours)/60) AS Avg_Resolution_Time\n",
    "FROM DA_ASSIGNMENT\n",
    "GROUP BY 1\n",
    "ORDER BY Avg_Resolution_Time DESC;\n",
    "\n",
    "\n",
    "-- Count of 0 reopens for each groups\n",
    "CREATE TABLE ZERO_REOPEN_CASES AS (\n",
    "SELECT Groupss, COUNT(*) AS total_cases\n",
    "FROM DA_ASSIGNMENT\n",
    "WHERE Reopens = 0\n",
    "GROUP BY Groupss);\n",
    "\n",
    "\n",
    "-- % of 0 reopen cases from the total cases of each group\n",
    "CREATE TABLE ZERO_PERC_REOPEN_CASES AS (\n",
    "SELECT Groupss, COUNT(*) AS total_cases,\n",
    "  COUNT(CASE WHEN Reopens = 0 THEN 1 END) * 100.0 / COUNT(*) AS percentage_zero_reopens\n",
    "FROM DA_ASSIGNMENT\n",
    "GROUP BY Groupss);\n",
    "\n",
    "\n",
    "-- Count of more than 5 reopens for each groups\n",
    "CREATE TABLE MORE_THAN_FIVE_REOPEN_CASES AS (\n",
    "SELECT Groupss, COUNT(*) AS count\n",
    "FROM DA_ASSIGNMENT\n",
    "WHERE Reopens > 5\n",
    "GROUP BY Groupss);\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
